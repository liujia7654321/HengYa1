# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Page4.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.




from PyQt5 import QtCore, QtGui, QtWidgets

from PyQt5.QtWidgets import *
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar
from matplotlib.figure import Figure
import matplotlib.pyplot as plt
import numpy as np
from scipy import optimize
import math

def f_1(x, A, B):
    return A * x + B

class MyMplCanvas(FigureCanvas):
    def __init__(self, parent=None, width=5, height=4, dpi=100):
        plt.rcParams['font.family'] = ['SimHei']
        plt.rcParams['axes.unicode_minus'] = False
        self.fig = Figure(figsize=(width, height), dpi=dpi)
        self.axes = self.fig.add_subplot(111)
        # self.axes.hold(False)
        FigureCanvas.__init__(self, self.fig)
        self.setParent(parent)
        FigureCanvas.setSizePolicy(
            self,
            QSizePolicy.Expanding,
            QSizePolicy.Expanding
        )
        FigureCanvas.updateGeometry(self)
        self.fig.suptitle('lgK-lgΔP曲线图')
        self.axes.set_ylabel('lgK')
        self.axes.set_xlabel('lgΔP')
        self.axes.grid(True)




    def start_static_plot(self):

        # 拟合点
        x0 = [75, 70, 65, 60, 55, 50, 45, 40, 35, 30]
        y0 = [22.44, 22.17, 21.74, 21.37, 20.92, 20.67, 20.32, 20.05, 19.84, 19.59]

        # 绘制散点
        self.axes.scatter(x0[:], y0[:], s = 10, c = "red",alpha=0.5)

        # 直线拟合与绘制
        A1, B1 = optimize.curve_fit(f_1, x0, y0)[0]
        x1 = np.arange(30, 75, 0.01)  # 30和75要对应x0的两个端点，0.01为步长
        y1 = A1 * x1 + B1
        self.axes.plot(x1, y1, "red",label='label1')
        self.axes.legend(loc='lower right', fontsize=12)  # 标签位置

        y2 = [75, 70, 65, 60, 55, 50, 45, 40, 35, 30]
        x2 = [22.44, 22.17, 21.74, 21.37, 20.92, 20.67, 20.32, 20.05, 19.84, 19.59]

        # 绘制散点
        self.axes.scatter(x2[:], y2[:], s=10, c="blue", alpha=0.5)

        # 直线拟合与绘制
        A2, B2 = optimize.curve_fit(f_1, x2, y2)[0]
        x3 = np.arange(30, 75, 0.01)  # 30和75要对应x0的两个端点，0.01为步长
        y3 = A2 * x3 + B2
        self.axes.plot(x3, y3, "blue", label='label2')
        self.axes.legend(loc='lower right', fontsize=12)  # 标签位置
        self.draw()

    # def start_dynamic_plot(self, *args, **kwargs):
        # timer = QtCore.QTimer(self)
        # timer.timeout.connect(self.update_figure)
        # timer.start(1000)

    def update_figure(self,x,y,name):
        x.reverse()
        y.reverse()
        if len(x) < 3:
            return
        # 绘制散点
        self.axes.scatter(x[:], y[:], s=10, alpha=0.5)
        # 直线拟合与绘制
        A1, B1 = optimize.curve_fit(f_1, x, y)[0]
        x1 = np.arange(x[len(x)-1],x[0], 0.001)  # 对应x0的两个端点，0.01为步长
        y1 = A1 * x1 + B1
        fuhao = ''
        if B1 >= 0:
            fuhao = '+'
        lab = 'y=' + str(round(A1, 1)) + '*x' + fuhao + str(round(B1, 2))
        self.axes.plot(x1, y1, label = lab )
        self.axes.legend(loc='lower right', fontsize=12)  # 标签位置
        self.draw()
        return A1, B1


class MatplotlibWidget(QWidget):
    def __init__(self, parent=None):
        super(MatplotlibWidget, self).__init__(parent)
        self.layout = QVBoxLayout(self)
        self.mpl = MyMplCanvas(self, width=5, height=4, dpi=100)
        self.mpl_ntb = NavigationToolbar(self.mpl, self)
        self.layout.addWidget(self.mpl)
        self.layout.addWidget(self.mpl_ntb)
    def clear(self):
        self.mpl.close()
        self.mpl_ntb.close()
        del self.mpl
        del self.mpl_ntb
        self.mpl = MyMplCanvas(self, width=5, height=4, dpi=100)
        self.layout.addWidget(self.mpl)
        self.mpl_ntb = NavigationToolbar(self.mpl, self)
        self.layout.addWidget(self.mpl_ntb)


class Ui_Page4(object):
    global ui
    def setupUi(self, Page4):
        Page4.setObjectName("Page4")
        Page4.resize(1310, 719)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Resource/icon/File Reco.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Page4.setWindowIcon(icon)
        self.groupBox = QtWidgets.QGroupBox(Page4)
        self.groupBox.setGeometry(QtCore.QRect(340, 70, 961, 631))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.frame_7 = QtWidgets.QFrame(Page4)
        self.frame_7.setGeometry(QtCore.QRect(0, 80, 341, 621))
        self.frame_7.setStyleSheet("")
        self.frame_7.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_7.setLineWidth(2)
        self.frame_7.setObjectName("frame_7")
        self.label_7 = QtWidgets.QLabel(self.frame_7)
        self.label_7.setGeometry(QtCore.QRect(20, 30, 121, 26))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.textEdit = QtWidgets.QTextEdit(self.frame_7)
        self.textEdit.setGeometry(QtCore.QRect(160, 20, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        self.label_8 = QtWidgets.QLabel(self.frame_7)
        self.label_8.setGeometry(QtCore.QRect(20, 100, 121, 26))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.textEdit_2 = QtWidgets.QTextEdit(self.frame_7)
        self.textEdit_2.setGeometry(QtCore.QRect(160, 90, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.textEdit_2.setFont(font)
        self.textEdit_2.setObjectName("textEdit_2")
        self.textEdit_7 = QtWidgets.QTextEdit(self.frame_7)
        self.textEdit_7.setGeometry(QtCore.QRect(160, 230, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.textEdit_7.setFont(font)
        self.textEdit_7.setObjectName("textEdit_7")
        self.label_21 = QtWidgets.QLabel(self.frame_7)
        self.label_21.setGeometry(QtCore.QRect(10, 240, 141, 26))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_21.setFont(font)
        self.label_21.setObjectName("label_21")
        self.textEdit_8 = QtWidgets.QTextEdit(self.frame_7)
        self.textEdit_8.setGeometry(QtCore.QRect(160, 160, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.textEdit_8.setFont(font)
        self.textEdit_8.setObjectName("textEdit_8")
        self.label_22 = QtWidgets.QLabel(self.frame_7)
        self.label_22.setGeometry(QtCore.QRect(10, 170, 141, 26))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_22.setFont(font)
        self.label_22.setObjectName("label_22")
        self.pushButton_2 = QtWidgets.QPushButton(self.frame_7)
        self.pushButton_2.setGeometry(QtCore.QRect(110, 360, 121, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet(" QPushButton {\n"
"color: #333;\n"
"border: 2px solid #3465a4;\n"
"font:bold 14pt \"Arial\";\n"
"text-align:center;\n"
"border-radius: 8px;\n"
"padding: 5px;\n"
"background: qradialgradient(cx: 0.3, cy: -0.4,\n"
"fx: 0.3, fy: -0.4,\n"
"radius: 1.89, stop: 0 #fff, stop: 1 #888a85);\n"
"min-width: 80px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"background: qradialgradient(cx: 0.3, cy: -0.4,\n"
"fx: 0.3, fy: -0.4,\n"
"radius: 1.89, stop: 0 #fff, stop: 1 #898a88);\n"
"}\n"
"\n"
" QPushButton:pressed {\n"
"background: qradialgradient(cx: 0.4, cy: -0.1,\n"
"fx: 0.4, fy: -0.1,\n"
"radius: 1.89, stop: 0 #fff, stop: 1 #8a8a89);\n"
"}")
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_2 = QtWidgets.QLabel(Page4)
        self.label_2.setGeometry(QtCore.QRect(470, 10, 371, 71))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setUnderline(True)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")

        self.retranslateUi(Page4)
        QtCore.QMetaObject.connectSlotsByName(Page4)

    def retranslateUi(self, Page4):
        _translate = QtCore.QCoreApplication.translate
        Page4.setWindowTitle(_translate("Page4", "lgK-lgΔP曲线图"))
        self.groupBox.setTitle(_translate("Page4", "lgK-lgΔP曲线图"))
        self.label_7.setText(_translate("Page4", "曲线斜率："))
        self.label_8.setText(_translate("Page4", "曲线截距："))
        self.label_21.setText(_translate("Page4", "物性常数k："))
        self.label_22.setText(_translate("Page4", "压缩性指数s："))
        self.pushButton_2.setText(_translate("Page4", "清 空"))
        self.label_2.setText(_translate("Page4", "恒压过滤数据处理软件V1.0"))

    def init(self):
        # 清空
        self.pushButton_2.clicked.connect(self.clear)
        global ui
        # 显示至pyqt主界面
        ui = MatplotlibWidget()
        self.gridlayout = QGridLayout(self.groupBox)  # 继承容器groupBox
        self.gridlayout.addWidget(ui)

    def clear(self):
        self.textEdit.clear()
        self.textEdit_2.clear()
        self.textEdit_8.clear()
        self.textEdit_7.clear()
        global ui
        ui.clear()

    def AddLine(self,x,y):
        global ui
        try:
            A1, B1 = ui.mpl.update_figure(x, y, "")
            self.textEdit.setText(str(round(A1, 4)))
            self.textEdit_2.setText(str(round(B1, 4)))
            S = 1 - A1
            self.textEdit_8.setText(str(round(S, 4)))
            k = math.pow(10, B1) * 0.5
            self.textEdit_7.setText(str(round(k, 4)))
        except:
            return
        # return A1, B1, k